# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

on:
  workflow_dispatch:
    branches: [ "main" ]
    inputs:
      version:
        type: string
        description: 'Version'
        required: true
        default: '1.0.0'
      publish:
        type: boolean
        description: 'Publish to NuGet.org'
        required: false
        default: false

name: Release
run_name: Release ${{ github.event.inputs.version }}

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  CONFIGURATION: release
  VERSION: ${{ github.event.inputs.version }}

jobs:
  pack:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal
      - name: Pack
        run: dotnet pack --no-build --no-restore -o ./out
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: nuget
          path: ./out
          if-no-files-found: error
          retention-days: 5
  
  publish_github:
    needs: [ pack ]
    runs-on: ubuntu-latest

    env:
      NUGET_SOURCE: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json

    steps:
      - uses: actions/setup-dotnet@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: nuget
          path: ./out
      - name: Add NuGet source
        run: dotnet nuget add source {{ env.NUGET_SOURCE }} --name github
      - name: Push NuGet package
        run: dotnet nuget push ./out/*.nupkg --source github --api-key ${{ secrets.GITHUB_TOKEN }}

  publish_nuget:
    if: github.event.inputs.publish == 'true'
    needs: [ pack ]
    runs-on: ubuntu-latest
    
    env:
      NUGET_SOURCE: https://api.nuget.org/v3/index.json
    
    steps:
      - uses: actions/setup-dotnet@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: nuget
          path: ./out
      - name: Add NuGet source
        run: dotnet nuget add source {{ env.NUGET_SOURCE }} --name nuget.org
      - name: Push NuGet package to NuGet.org
        run: dotnet nuget push ./out/*.nupkg --source nuget.org --api-key ${{ secrets.NUGET_API_KEY }}
  
  create_release:
    needs: [ pack, publish_github ]
    runs-on: ubuntu-latest

    steps:
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          draft: false
          prerelease: ${{ contains(env.VERSION, 'preview') }}
